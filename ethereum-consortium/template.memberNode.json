{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "location of resources"
      }
    },
    "vmSku": {
      "defaultValue": "Standard_D1_v2",
      "type": "string",
      "metadata": {
        "description": "Size of VMs in the VM Scale Set."
      }
    },
    "image": {
      "type": "string",
      "metadata": {
        "description": "The os disk image for the VMs in the scale set."
      }
    },
    "vmssName": {
      "maxLength": 61,
      "type": "string",
      "metadata": {
        "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
      }
    },
    "instanceCount": {
      "type": "int",
      "metadata": {
        "description": "Number of VM instances (100 or less)."
      }
    },
    "username": {
      "type": "string",
      "metadata": {
        "description": "Admin username on all VMs."
      }
    },
    "sshPublicKey": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "ssh public key for connecting to VMs."
      }
    },
    "storageAccounts": {
      "type": "array"
    },
    "virtualNetworkName": {
      "type": "string"
    },
    "networkConfiguration": {
      "type": "object"
    },
    "additionalCommands" : {
      "type": "secureObject",
      "defaultValue": {
        "Commands" : []
      }
    },
    "nodeEnvironment" : {
      "type": "secureObject"
    },
    "OMSEnvironment": {
      "type": "secureObject"
    },
    "genesisContent" : {
      "type": "securestring"
    },
    "nodeImage" : {
      "type" : "string"
    },
    "contentRoot": {
      "type": "string"
    }
  },
  "variables": {
    "deploymentId": "[toLower(substring(uniqueString(resourceGroup().Id), 0, 10))]",
    "resourceLocation": "[parameters('location')]",
    "commandsJson" : [
      {
        "name" : "WriteGeth",
        "command" : "mkdir -p /home/$USER/eth-node && echo $GENESIS_CONTENT | base64 -d > /home/$USER/eth-node/genesis.json",
        "environment" : {
          "USER" : "[parameters('username')]",
          "GENESIS_CONTENT" : "[parameters('genesisContent')]"
        }
      },
      {
        "name" : "ChownDirectory",
        "command" : "chown -R $USER /home/$USER/eth-node",
         "environment" : {
          "USER" : "[parameters('username')]"
        }
      },
      {
        "name": "eth-node",
        "image": "[parameters('nodeImage')]",
        "ports": [
          { "port": 8545, "protocol": "tcp" },
          { "port": 8546, "protocol": "tcp" },
          { "port": 30303, "protocol": "tcp" },
          { "port": 30303, "protocol": "udp" }
        ],
        "environment": "[parameters('nodeEnvironment')]",
        "arguments" : [
          "[concat('-v /home/', parameters('username'), '/eth-node/genesis.json:/home/eth-node/genesis.json')]",
          "-td --restart always",
          "--hostname ${HOST_NAME}-c"
        ]
      },
     {
        "name": "oms-agent",
        "image": "microsoft/oms",
        "ports": [
          { "port": 25225, "protocol": "tcp" }
        ],
        "environment": "[parameters('OMSEnvironment')]",
        "arguments" : [
          "--privileged -v /var/run/docker.sock:/var/run/docker.sock"
        ]
      }
    ],
    "combinedCommands" : "[concat(variables('commandsJson'), parameters('additionalCommands').Commands)]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "name": "[concat('Consoritum.', parameters('vmssName'), '.VMSSCommands')]",
      "apiVersion": "2015-01-01",
      "properties": {
        "templateLink": {
          "contentVersion": "1.0.0.0",
          "uri": "[concat(parameters('contentRoot'), '/utilityTemplates/template.vmss.commands.json')]"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('resourceLocation')]"
          },
          "contentRoot" : {
            "value" : "[parameters('contentRoot')]"
          },
          "vmssName": {
            "value": "[parameters('vmssName')]"
          },
          "vmSku": {
            "value": "[parameters('vmSku')]"
          },
          "image": {
            "value": "[parameters('image')]"
          },
          "instanceCount": {
            "value": "[parameters('instanceCount')]"
          },
          "storageAccounts": {
            "value": "[parameters('storageAccounts')]"
          },
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "username": {
            "value": "[parameters('username')]"
          },
          "sshPublicKey": {
            "value": "[parameters('sshPublicKey')]"
          },
          "commandsJson" : {
            "value" : {
              "Commands" : "[variables('combinedCommands')]"
            }
          },
          "networkConfiguration": {
            "value": "[parameters('networkConfiguration')]"
          }
        }
      }
    }
  ]
}