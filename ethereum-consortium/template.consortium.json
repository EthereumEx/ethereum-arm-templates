{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "consortiumName": {
      "type": "string",
      "maxLength": 10,
      "metadata": {
        "description": "A short identifier to distinguish machines in this membership"
      }
    },
    "members": {
      "type": "array",
      "metadata": {
        "description": "An array of members to create { name : 'M1', minerCount : 1, txNodeCount : 3, minerAddress : '0x1234', location : 'westus' }"
      }
    },
    "username": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Admin username on all VMs."
      }
    },
    "sshPublicKey": {
      "type": "string",
      "metadata": {
        "description": "ssh public key(s) for connecting to VMs."
      }
    },
    "genesisJson": {
      "type": "secureObject",
      "metadata": {
        "description": "The JSON content of the genesis block"
      }
    },
    "minerGenesisJsonOverride": {
      "type": "secureObject",
      "defaultValue": {},
      "metadata": {
        "description": "The JSON content for hte miner node, if different from the genesis json"
      }
    },
    "gethNetworkId": {
      "type": "securestring",
      "metadata": {
        "description": "A unique id used to ensure only machines on the same network can talk to each other"
      }
    },
    "dashboardSecret": {
      "type": "securestring",
      "metadata": {
        "description": "A unique string to used to ensure only machines with the secret can post to the dashboard"
      }
    },
    "minerVMSku": {
      "defaultValue": "Standard_DS2_v2",
      "type": "string",
      "allowedValues": [
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5"
      ]
    },
    "txnodeVMSku": {
      "defaultValue": "Standard_DS1_v2",
      "type": "string",
      "allowedValues": [
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5"
      ]
    },
    "contentVersion": {
      "defaultValue": "Release-v0.9.6",
      "type": "string",
      "metadata": {
        "description": "The version of the templates to use. This refers to a git branch. This parameter is ignored if contentRootOverride is provided"
      }
    },
    "contentRootOverride": {
      "defaultValue": "",
      "type": "string"
    },
    "dashboardDockerImage": {
      "defaultValue": "ethereumex/eth-stats-dashboard:latest",
      "type": "string",
      "allowedValues": [
        "ethereumex/eth-stats-dashboard:latest"
      ]
    },
    "txNodeDockerImage": {
      "defaultValue": "ethereumex/geth-node:latest",
      "type": "string",
      "allowedValues": [
        "ethereumex/geth-node:latest",
        "ethereumex/parity-node:latest"
      ]
      
    },
    "minerNodeDockerImage": {
      "defaultValue": "ethereumex/geth-node:latest",
      "type": "string",
      "allowedValues": [
        "ethereumex/geth-node:latest"
      ]
    },
    "locationOverride": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Location to deploy resources. By default the template will use the Resource Group location"
      }
    },
    "WSID": {
      "type": "string",
      "metadata": {
        "description": "OMS WSID"
      }
    },
    "OMSKey": {
      "type": "string",
      "metadata": {
        "description": "OMS Key"
      }
    }
  },
  "variables": {
    "contentRootUrl": "[concat('https://raw.githubusercontent.com/EthereumEx/ethereum-arm-templates/', parameters('contentVersion'), '/ethereum-consortium')]",
    "contentRoots": [
      "[variables('contentRootUrl')]",
      "[parameters('contentRootOverride')]"
    ],
    "contentRoot": "[variables('contentRoots')[length(take(parameters('contentRootOverride'),1))]]",
    "resourceLocations": [
      "[resourceGroup().location]",
      "[parameters('locationOverride')]"
    ],
    "resourceLocation": "[tolower(variables('resourceLocations')[length(take(parameters('locationOverride'),1))])]",
    "dConsortiumName" : "[concat('Consortium.', parameters('consortiumName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "name": "[variables('dConsortiumName')]",
      "apiVersion": "2015-01-01",
      "properties": {
        "templateLink": {
          "contentVersion": "1.0.0.0",
          "uri": "[concat(variables('contentRoot'), '/template.consortium.custom.json')]"
        },
        "mode": "Incremental",
        "parameters": {
          "consortiumName": {
            "value": "[parameters('consortiumName')]"
          },
          "members": {
            "value": "[parameters('members')]"
          },
          "username": {
            "value": "[parameters('username')]"
          },
          "sshPublicKey": {
            "value": "[parameters('sshPublicKey')]"
          },
          "genesisJson": {
            "value": "[parameters('genesisJson')]"
          },
           "minerGenesisJsonOverride": {
            "value": "[parameters('minerGenesisJsonOverride')]"
          },
          "gethNetworkId": {
            "value": "[parameters('gethNetworkId')]"
          },
          "dashboardSecret": {
            "value": "[parameters('dashboardSecret')]"
          },
          "minerVMSku": {
            "value": "[parameters('minerVMSku')]"
          },
          "txnodeVMSku": {
            "value": "[parameters('txnodeVMSku')]"
          },
          "contentVersion": {
            "value": "[parameters('contentVersion')]"
          },
          "contentRootOverride": {
            "value": "[parameters('contentRootOverride')]"
          },
          "dashboardDockerImage": {
            "value": "[parameters('dashboardDockerImage')]"
          },
          "txNodeDockerImage": {
            "value": "[parameters('txNodeDockerImage')]"
          },
          "minerNodeDockerImage": {
            "value": "[parameters('minerNodeDockerImage')]"
          },
          "locationOverride": {
            "value": "[variables('resourceLocation')]"
          },
          "WSID": {
            "value":"[parameters('WSID')]"
          },
          "OMSKey": {
            "value": "[parameters('OMSKey')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "DashboardIp": {
      "type": "string",
      "value": "[reference(variables('dConsortiumName')).outputs.DashboardIp.value]"
    }
  }
}